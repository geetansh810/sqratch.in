---
import { type CollectionEntry, getCollection } from "astro:content";
// import allPosts from "@/dummyData/postData.json";
import CompetitionPreview from "./CompetitionPreview.astro";
import Link from "../primitives/Link.astro";
import competitions from "@/data/competitions.json";

const currentLocale = Astro.currentLocale;

// import { collection, getDocs } from "firebase/firestore";
// import { db } from "../lib/firebase";

// const querySnapshot = await getDocs(collection(db, "posts"));
// const posts = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));

// const recentPosts = posts
//   .map((post) => {
//     const [lang, ...slug] = post.slug.split("/");
//     return {
//       ...post,
//       lang: lang,
//       slug: post.slug.startsWith("/") ? post.slug : `/${post.slug}`,
//     };
//   })
//   .filter((post) => post.lang === currentLocale)
//   .sort(
//     (a, b) => a.data.lastUpdateDate.getTime() - b.data.lastUpdateDate.getTime()
//   )
//   .slice(0, 4) as CollectionEntry<"posts">[];

// interface Props {
//   title: string;
//   buttons: ButtonProps[];
// }

const { title, buttons } = Astro.props;
---

<div class="text-sm font-medium pt-0 pb-32">
  <div
    class="items-center justify-center flex text-center text-[2rem] lg:text-[3.13rem] leading-none font-semibold"
  >
    <h2 class="my-1 text-blue-primary">{title}</h2>
  </div>
  <div class="mt-16">
    <div
      class="gap-x-[1.88rem] text-sm font-medium auto-cols-fr grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 grid-rows-[auto] gap-y-10 grid"
    >
      {competitions.slice(0, 2).map((competition) => <CompetitionPreview {competition} />)}
    </div>
    <div class="items-center flex-col text-sm font-medium flex text-white pt-10 pb-10">
        {
          buttons.map(({ title, href, style, icon }) => (
          <Link href={href} style={ style as "primary" | "button" | "outline" | "buttonLight" } icon={icon}>
          {title}
          </Link>
          ))
        }
      </div>
  </div>
</div>
