---
import { Image } from "astro:assets";
import Container from "@/components/primitives/Container.astro";
import Link from "@/components/primitives/Link.astro";
import Prose from "@/components/primitives/Prose.astro";
import Share from "@/components/primitives/Share.astro";
import Title from "@/components/primitives/Title.astro";
import { defaultLocale } from "site";
import BaseLayout from "./BaseLayout.astro";

type Props = {
	data:any
};

const currentLocale = Astro.currentLocale;

interface PostLayoutLocale {
	writtenBy: string;
	writtenAt: string;
}

interface ComponentLocales {
	[key: string]: PostLayoutLocale;
}

const componentLocales: ComponentLocales = {
	it: {
		writtenBy: "Scritto da: ",
		writtenAt: "nel",
	},
	en: {
		writtenBy: "Written by: ",
		writtenAt: "on",
	},
};

const l = componentLocales[currentLocale ?? defaultLocale];

const { data } = Astro.props;
---

<BaseLayout>
	<section class="py-32 md:py-56">
		<Container>
			<div class="text-center">
				{
					"author" in data &&
						data?.author &&
						"pubDate" in data &&
						data?.pubDate && (
							<div class="inline-flex items-center gap-4 pb-4 lg:pb-6">
								<span class="text-xs font-semibold uppercase tracking-wide text-black">
									<span>
										{l.writtenBy} {data?.author}
										{l.writtenAt}
									</span>
									{data?.pubDate
										?.toString()
										.slice(0, 10)}
								</span>
							</div>
						)
				}

				<Title level={1}>{data.title}</Title>
				<p class="mx-auto max-w-2xl pt-8 text-base text-slate-500">
					<em>{data?.description}</em>
				</p>
			</div>
			<div class="flex w-full flex-col items-center justify-center pt-12">
				<div class="flex flex-wrap justify-center gap-3">
					{
						"tags" in data &&
							data?.tags?.map((tag: unknown) => (
								<li class="list-none">
									<Link
										href={`/tags/${tag}`}
										size="md"
										style="outline"
									>
										{tag}
									</Link>
								</li>
							))
					}
				</div>
				{
					"cover" in data && data?.cover && (
						<Image
							class="mt-12 w-full rounded-4xl lg:w-auto lg:min-w-[50rem] lg:rounded-5xl"
							src={data?.cover}
							alt={`Cover image for ${data?.title}`}
							inferSize={true}
						/>
					)
				}
				<Prose><slot /></Prose>
				<!-- <div
					class:list={[
						"prose mx-auto w-full max-w-3xl pt-12 text-lg text-slate-900 prose-headings:font-normal prose-headings:tracking-tighter prose-headings:text-black prose-a:text-slate-500 hover:prose-a:text-black prose-blockquote:border-l-slate-950 prose-blockquote:text-slate-500 prose-code:text-black prose-pre:rounded-3xl prose-li:marker:text-slate-500"
					]}>
					<div set:html={data.htmlContent} />
				</div> -->

				<div class="mx-auto w-full max-w-3xl pt-20">
					<Share />
				</div>
			</div>
		</Container>
	</section>
</BaseLayout>
